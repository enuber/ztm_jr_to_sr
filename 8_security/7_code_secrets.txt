Code Secrets

API keys, environment variables

React has access to process.env.NODE_ENV which tells us if in dev or production 

but with this we can inject passwords, database basswords, usernames and API keys or other variables.


In a React application, environment variables are typically stored in a .env file, and there is a specific naming convention you need to follow for these variables to be accessible within your React code.

Naming Convention

Prefix with REACT_APP_: All environment variables that you want to use in your React application must be prefixed with REACT_APP_. If you don't follow this convention, the variables will not be exposed to the React app.


Example .env File (remember this goes in your gitignore file)

REACT_APP_API_URL=https://api.example.com
REACT_APP_API_KEY=your-api-key
REACT_APP_FEATURE_FLAG=true

How to Access Environment Variables
Once you have defined your environment variables in the .env file, you can access them in your React code using process.env.

Example Usage in React Code
const apiUrl = process.env.REACT_APP_API_URL;
const apiKey = process.env.REACT_APP_API_KEY;
const featureFlag = process.env.REACT_APP_FEATURE_FLAG === 'true';

console.log('API URL:', apiUrl);
console.log('API Key:', apiKey);
console.log('Feature Flag:', featureFlag);

Notes
Variables without REACT_APP_: Any environment variables that do not start with REACT_APP_ will not be accessible in your React app. This is a security feature to prevent leaking sensitive information into the client-side code.
.env File Placement: The .env file should be placed at the root of your project, at the same level as your package.json file.
Custom Environments: You can create different .env files for different environments, such as .env.development, .env.production, etc. React will automatically use the correct .env file based on the environment you're building or running your app in.

By following this naming convention, you ensure that your environment variables are correctly exposed and usable in your React application.

if not using Create-React-App can use dotenv and install it to get same type of privacy for passwords.